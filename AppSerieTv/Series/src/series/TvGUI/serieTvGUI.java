/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package series.TvGUI;

import connectionDB.ConnectionDB;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import javax.swing.*;

import java.sql.ResultSet;

/**
 *
 * @author usuario
 */
public class serieTvGUI extends javax.swing.JFrame {

    public serieTvGUI() {
        initComponents();
        setLocationRelativeTo(null);
        
        // Configuración del JTextArea para la sinopsis se ajuste al area de texto
        txtSinopsis.setLineWrap(true);           
        txtSinopsis.setWrapStyleWord(true);      

        // Configuración del JTextArea para los actores se ajusta al area de texto
        txtActores.setLineWrap(true);           
        txtActores.setWrapStyleWord(true);     
    
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTemporadas = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        listGenero = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtActores = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSinopsis = new javax.swing.JTextArea();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        txtEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Background.setBackground(new java.awt.Color(221, 30, 30));
        Background.setPreferredSize(new java.awt.Dimension(710, 755));
        Background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(153, 204, 255));
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/BlAz.png"))); // NOI18N
        Background.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 280));

        jLabel2.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jLabel2.setText("Codigo");
        Background.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 300, 70, 20));

        txtCodigo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCodigo.setForeground(new java.awt.Color(27, 51, 75));
        Background.add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 300, 190, -1));

        btnBuscar.setBackground(new java.awt.Color(135, 182, 220));
        btnBuscar.setForeground(new java.awt.Color(39, 65, 91));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        Background.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 340, 120, 30));

        jLabel3.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jLabel3.setText("Titulo");
        Background.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 50, 20));

        txtTitulo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTitulo.setForeground(new java.awt.Color(27, 51, 75));
        Background.add(txtTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 310, -1));

        jLabel4.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jLabel4.setText("Fecha de lanzamiento");
        Background.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 170, -1));

        txtFecha.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtFecha.setForeground(new java.awt.Color(27, 51, 75));
        Background.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 390, 190, -1));

        jLabel5.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jLabel5.setText("Temporadas");
        Background.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 100, 20));

        txtTemporadas.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTemporadas.setForeground(new java.awt.Color(27, 51, 75));
        Background.add(txtTemporadas, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 440, 250, -1));

        jLabel6.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jLabel6.setText("Genero de TV o Serie");
        Background.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, 150, 20));

        listGenero.setBackground(new java.awt.Color(135, 182, 220));
        listGenero.setForeground(new java.awt.Color(39, 65, 91));
        listGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Acción", "Ciencia Ficcion", "Comedia", "Drama", "Misterio", "Romance", "Terror" }));
        Background.add(listGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 490, 200, -1));

        jLabel7.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jLabel7.setText("Actores");
        Background.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 390, 80, 20));

        txtActores.setColumns(20);
        txtActores.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtActores.setForeground(new java.awt.Color(27, 51, 75));
        txtActores.setRows(5);
        jScrollPane1.setViewportView(txtActores);

        Background.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 424, 260, 90));

        jLabel8.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jLabel8.setText("Sinopsis");
        Background.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 540, 180, 20));

        txtSinopsis.setColumns(20);
        txtSinopsis.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSinopsis.setForeground(new java.awt.Color(27, 51, 75));
        txtSinopsis.setRows(5);
        jScrollPane2.setViewportView(txtSinopsis);

        Background.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 570, 660, 100));

        btnGuardar.setBackground(new java.awt.Color(135, 182, 220));
        btnGuardar.setForeground(new java.awt.Color(39, 65, 91));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        Background.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 700, 120, 30));

        btnEditar.setBackground(new java.awt.Color(135, 182, 220));
        btnEditar.setForeground(new java.awt.Color(39, 65, 91));
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        Background.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 700, 120, 30));

        btnLimpiar.setBackground(new java.awt.Color(135, 182, 220));
        btnLimpiar.setForeground(new java.awt.Color(39, 65, 91));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        Background.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 700, 120, 30));

        txtEliminar.setBackground(new java.awt.Color(135, 182, 220));
        txtEliminar.setForeground(new java.awt.Color(39, 65, 91));
        txtEliminar.setText("Eliminar");
        txtEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEliminarActionPerformed(evt);
            }
        });
        Background.add(txtEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 700, 120, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    
    
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        
        ConnectionDB objConexion = new ConnectionDB();
        String sql = "INSERT INTO serie (codigo, titulo, fecha, temporadas, genero, actores, sinopsis) VALUES (?, ?, ?, ?, ?, ?, ?)";

        try (Connection connection = objConexion.getConnection();
             PreparedStatement statement = connection.prepareStatement(sql)) {

            statement.setString(1, txtCodigo.getText());
            statement.setString(2, txtTitulo.getText());
            statement.setString(3, txtFecha.getText());
            statement.setString(4, txtTemporadas.getText());
            statement.setString(5, (String) listGenero.getSelectedItem());
            statement.setString(6, txtActores.getText());
            statement.setString(7, txtSinopsis.getText());

            int resultado = statement.executeUpdate();
            if (resultado == 1) {
                JOptionPane.showMessageDialog(this, "Serie guardada exitosamente.");
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(this, "Error al guardar la serie.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
   
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
    
        
        ConnectionDB objConexion = new ConnectionDB();
        String sql = "UPDATE serie SET titulo=?, fecha=?, temporadas=?, genero=?, actores=?, sinopsis=? WHERE codigo=?";

        try (Connection connection = objConexion.getConnection();
             PreparedStatement statement = connection.prepareStatement(sql)) {

            statement.setString(1, txtTitulo.getText());
            statement.setString(2, txtFecha.getText());
            statement.setString(3, txtTemporadas.getText());
            statement.setString(4, (String) listGenero.getSelectedItem());
            statement.setString(5, txtActores.getText());
            statement.setString(6, txtSinopsis.getText());
            statement.setString(7, txtCodigo.getText());

            int resultado = statement.executeUpdate();
            if (resultado == 1) {
                JOptionPane.showMessageDialog(this, "Serie actualizada exitosamente.");
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar la serie.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        
    limpiarCampos();

    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
       
        
        ConnectionDB objConexion = new ConnectionDB();
        String codigo = txtCodigo.getText();
        String sql = "SELECT * FROM serie WHERE codigo = ?";

        try (Connection connection = objConexion.getConnection();
             PreparedStatement statement = connection.prepareStatement(sql)) {

            statement.setString(1, codigo);
            ResultSet resultado = statement.executeQuery();

            if (resultado.next()) {
                txtTitulo.setText(resultado.getString("titulo"));
                txtFecha.setText(resultado.getString("fecha"));
                txtTemporadas.setText(resultado.getString("temporadas"));
                listGenero.setSelectedItem(resultado.getString("genero"));
                txtActores.setText(resultado.getString("actores"));
                txtSinopsis.setText(resultado.getString("sinopsis"));
            } else {
                JOptionPane.showMessageDialog(this, "Serie no encontrada.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEliminarActionPerformed
        
        ConnectionDB objConexion = new ConnectionDB();
    String codigo = txtCodigo.getText();

    if (codigo.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un código para eliminar la serie.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }

    String sql = "DELETE FROM serie WHERE codigo = ?";

    try (Connection connection = objConexion.getConnection();
         PreparedStatement statement = connection.prepareStatement(sql)) {

        statement.setString(1, codigo);
        int resultado = statement.executeUpdate();
        
        if (resultado == 1) {
            JOptionPane.showMessageDialog(this, "Serie eliminada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            limpiarCampos(); // Limpia los campos después de eliminar
        } else {
            JOptionPane.showMessageDialog(this, "Error al eliminar la serie. Puede que no exista.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    }//GEN-LAST:event_txtEliminarActionPerformed

    
    // limpiar los campos de ingreso de datos, si, hay info en ellos
    private void limpiarCampos() {
        txtCodigo.setText("");
        txtTitulo.setText("");
        txtFecha.setText("");
        txtTemporadas.setText("");
        listGenero.setSelectedIndex(0);
        txtActores.setText("");
        txtSinopsis.setText("");
    }
    
    
   
    /**
     * @param args the command line arguments
     */
    
    // se vizualiza interfaz en ventana
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new serieTvGUI().setVisible(true);
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> listGenero;
    private javax.swing.JTextArea txtActores;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JButton txtEliminar;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextArea txtSinopsis;
    private javax.swing.JTextField txtTemporadas;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
